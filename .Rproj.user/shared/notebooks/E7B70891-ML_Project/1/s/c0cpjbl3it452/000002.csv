"0","# Remove the extra first column; equivalent to row names."
"0","my_training <- my_training[c(-1)]"
"0","#Remove predictors that have one unique value (i.e: zero variance predictors) or those that satisfy the following: "
"0","#1. Very few unique values relative to the number of samples  "
"0","#2. Ratio of the frequency of the most common value to the frequency of the second most common value is large"
"0","nzv <- nearZeroVar(my_training, saveMetrics=TRUE)"
"0","my_training <- my_training[,nzv$nzv==FALSE]"
"0","nzv<- nearZeroVar(my_testing,saveMetrics=TRUE)"
"0","my_testing <- my_testing[,nzv$nzv==FALSE]"
"0","# Clean variables with more than 70% NA"
"0","index_to_rm <- NULL"
"0","for (i in 1:ncol(my_training))"
"0","{"
"0","if  ( length(which(is.na(my_training[,i])==T)) / nrow(my_training) >= 0.7 )"
"0","index_to_rm <- append(index_to_rm, i)"
"0","}"
"0","my_training <- my_training[,-index_to_rm]"
"0","  "
"0","rm(i, index_to_rm,nzv)"
"0","# Specify which columns to include in each of pml_testing & my_testing data frames for consistency with my_training."
"0","columns_to_include_in_mytesting <- colnames(my_training)          # we will classe variable to build the confusion matrix (together with our prediction)"
"0","columns_to_include_in_pmltesting <- colnames(my_training[, -58])  # since the classe variable doesn't exist in pml_testing"
"0","my_testing <- my_testing[columns_to_include_in_mytesting]         # allow only variables in mytesting that are also in mytraining (this includes classe variable)"
"0","pml_testing <- pml_testing[columns_to_include_in_pmltesting]      # allow only variables in pml_testing that are also in mytraining (this doesn't include classe variable)"
"0","rm(columns_to_include_in_mytesting,columns_to_include_in_pmltesting)"
